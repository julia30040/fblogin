{"version":3,"sources":["mocks/candidates.js","component/Element/CandidateCheckbox.jsx","reducers/member.js","reducers/index.js","actions/member.js","mocks/member.js","container/Candidates/CandidatesPage.jsx","container/Home/HomePage.jsx","container/Member/SelectedCandidatesPage.jsx","container/MainBoard.jsx","App.js","serviceWorker.js","index.js"],"names":["POLITICAL_PARTIES","candidates","id","name","politicalParty","styles","description","marginLeft","CandidateCheckbox","clickCandidate","_this$props$input","this","props","input","value","onChange","targetIndex","findIndex","candidate","concat","Object","toConsumableArray","slice","objectSpread","_this","_this$props","undefined","react_default","a","createElement","key","type","e","onClickCheckbox","checked","c","parseInt","style","PureComponent","radium","initialValues","me","email","accessToken","selectedCandidates","member","state","arguments","length","action","MEMBER_LOGIN","MEMBER_UPDATE_SELECTED_CANDIDATES","rootReducer","combineReducers","Member","form","formReducer","store","createStore","applyMiddleware","thunk","updateMemberSelectedCandidates","dispatch","storeLoginMemberData","wrapper","padding","display","alignItems","justifyContent","list","height","data","button","marginTop","activePage","color","fontSize","CandidatesPage","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","pageIndex","history","replace","page","setState","_ref","_this$props2","console","log","alert","map","join","push","_this2","_this$props3","handleSubmit","userName","onSubmit","d","submit","mockMember","_","chunk","Field","component","onClick","onClickPage","formHook","reduxForm","reduxHook","connect","bindActionCreators","MemberActions","backgroundColor","minHeight","flexDirection","title","fbLoginBtn",":hover","HomePage","res","facebook_login_with_button_default","appId","autoLoad","fields","callback","loginWithFacebook","margin","shareDataHref","className","data-href","data-layout","data-size","data-mobile-iframe","rel","target","href","MainBoard","react","Switch","Route","exact","path","SelectedCandidatesPage","Component","withRouter","fullHeight","overflow","App","react_redux_es","style_root","BrowserRouter","container_MainBoard","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce6051ea.chunk.js","sourcesContent":["// @flow\n\nexport const POLITICAL_PARTIES = {\n  no: '無黨籍',\n  green: '民進黨',\n  blue: '國民黨',\n};\n\nexport const candidates = [{\n  id: 1,\n  name: '柯文摺',\n  politicalParty: POLITICAL_PARTIES['no'],\n}, {\n  id: 2,\n  name: '蔡英聞',\n  politicalParty: POLITICAL_PARTIES['green'],\n}, {\n  id: 3,\n  name: '叮守中',\n  politicalParty: POLITICAL_PARTIES['blue'],\n}, {\n  id: 4,\n  name: '吳蕚羊',\n  politicalParty: POLITICAL_PARTIES['no'],\n}, {\n  id: 5,\n  name: '柯文摺2號',\n  politicalParty: POLITICAL_PARTIES['no'],\n}, {\n  id: 6,\n  name: '蔡英聞2號',\n  politicalParty: POLITICAL_PARTIES['green'],\n}, {\n  id: 7,\n  name: '叮守中2號',\n  politicalParty: POLITICAL_PARTIES['blue'],\n}];\n","// @flow\n\nimport React, { PureComponent } from 'react';\nimport radium from 'radium';\n\nconst styles = {\n  description: {\n    marginLeft: 8,\n  },\n}\n\nclass CandidateCheckbox extends PureComponent<Props, State> {\n  onClickCheckbox(clickCandidate) {\n    const {\n      input: {\n        value,\n        onChange,\n      },\n    } = this.props;\n\n    const targetIndex = value.findIndex(candidate => {\n      return candidate.id === clickCandidate.id;\n    });\n\n    let selectedCandidates = [];\n\n    if (!~targetIndex) {\n      selectedCandidates = [\n        ...value, {\n          ...clickCandidate,\n        },\n      ];\n    } else {\n      selectedCandidates = [\n        ...value.slice(0, targetIndex),\n        ...value.slice(targetIndex + 1),\n      ];\n    }\n\n    onChange(selectedCandidates);\n  }\n\n  render() {\n    const {\n      candidate,\n      input: {\n        value,\n      },\n    } = this.props;\n\n    if (value === undefined || !value) return null;\n\n    return (\n      <div key={candidate.id}>\n        <input\n          type=\"checkbox\"\n          name={candidate.name}\n          onChange={(e) => this.onClickCheckbox(candidate)}\n          checked={!!~value.findIndex(c => parseInt(c.id, 10) === candidate.id)}\n          value={candidate} />\n        <span style={styles.description}>\n          {candidate.name}/ {candidate.politicalParty}\n        </span>\n      </div>\n    );\n  }\n}\n\nexport default radium(CandidateCheckbox);\n","import {\n  MEMBER_UPDATE_SELECTED_CANDIDATES,\n  MEMBER_LOGIN,\n} from '../actions/member.js';\n\nconst initialValues = {\n  me: {\n    id: '',\n    name: '',\n    email: '',\n    accessToken: '',\n  },\n  selectedCandidates: [],\n}\n\nfunction member(state = initialValues, action) {\n  // For now, don't handle any actions\n  // and just return the state given to us.\n  switch (action.type[0]) {\n    case MEMBER_LOGIN:\n      return {\n        ...state,\n        me: {\n          id: action.member.id,\n          name: action.member.name,\n          email: action.member.email,\n          accessToken: action.member.accessToken,\n        },\n      }\n    case MEMBER_UPDATE_SELECTED_CANDIDATES:\n      return {\n        ...state,\n        selectedCandidates: [\n          ...action.selectedCandidates,\n        ],\n      }\n    default:\n\n  }\n\n  return state\n}\n\nexport default member;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { reducer as formReducer } from 'redux-form'\nimport thunk from 'redux-thunk';\nimport Member from './member.js';\n\nconst rootReducer = combineReducers({\n  // ...your other reducers here\n  // you have to pass formReducer under 'form' key,\n  // for custom keys look up the docs for 'getFormState'\n  Member,\n  form: formReducer\n})\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk)\n);\n\nexport default store;\n","import store from '../reducers/index.js';\n\nexport const MEMBER_UPDATE_SELECTED_CANDIDATES = 'MEMBER/UPDATE_SELECTED_CANDIDATES';\nexport const MEMBER_LOGIN = 'MEMBER/LOGIN';\n\nexport function updateMemberSelectedCandidates(selectedCandidates) {\n  return () => store.dispatch({\n    type: [MEMBER_UPDATE_SELECTED_CANDIDATES],\n    selectedCandidates,\n  });\n}\n\nexport function storeLoginMemberData(member) {\n  return () => store.dispatch({\n    type: [MEMBER_LOGIN],\n    member,\n  });\n}\n","// @flow\n\nimport { POLITICAL_PARTIES } from './candidates.js';\n\nexport const member = {\n  id: 1,\n  name: '版OO',\n  selectedCandidates: [{\n    id: 1,\n    name: '柯文摺',\n    politicalParty: POLITICAL_PARTIES['no'],\n  }, {\n    id: 2,\n    name: '蔡英聞',\n    politicalParty: POLITICAL_PARTIES['green'],\n  }, {\n    id: 5,\n    name: '柯文摺2號',\n    politicalParty: POLITICAL_PARTIES['no'],\n  }],\n};\n","// @flow\n\nimport React, { PureComponent } from 'react';\nimport radium from 'radium';\nimport _ from 'lodash';\nimport {\n  reduxForm,\n  Field,\n} from 'redux-form';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { candidates } from '../../mocks/candidates.js';\nimport CandidateCheckbox from '../../component/Element/CandidateCheckbox.jsx';\nimport * as MemberActions from '../../actions/member.js';\nimport { member as mockMember } from '../../mocks/member.js';\n\nconst styles = {\n  wrapper: {\n    padding: 64,\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  list: {\n    height: 100,\n  },\n  data: {\n    marginLeft: 8,\n  },\n  button: {\n    marginTop: 16,\n    display: 'block',\n  },\n  activePage: {\n    color: 'brown',\n    fontSize: 15,\n  },\n}\n\nclass CandidatesPage extends PureComponent<Props, State> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pageIndex: 0,\n    };\n  }\n\n  componentDidMount() {\n    const {\n      me,\n      history,\n    } = this.props;\n\n    if(!me.accessToken) {\n      history.replace('/');\n    }\n  }\n\n  onClickPage(page) {\n    this.setState({ pageIndex: page - 1 });\n  }\n\n  submit({\n    candidates,\n  }) {\n    const {\n      history,\n      updateMemberSelectedCandidates,\n    } = this.props;\n\n    console.log('選取的候選人:', candidates);\n    alert(`選取候選人: ${candidates.map(candidate => candidate.name).join('、')}`);\n\n    updateMemberSelectedCandidates(candidates);\n\n    history.push('/1/selectedCandidates');\n  }\n\n  render() {\n    const { pageIndex } = this.state;\n    const {\n      handleSubmit,\n      userName,\n    } = this.props;\n\n    return (\n        <div style={styles.wrapper}>\n          <form onSubmit={handleSubmit(d => this.submit(d))}>\n            <h1>Hi {userName || mockMember.name}, 請選擇支持的候選人</h1>\n            <div style={styles.list}>\n              {_.chunk(candidates, 4)[pageIndex].map(candidate => (\n                <Field\n                  name=\"candidates\"\n                  component={CandidateCheckbox}\n                  key={candidate.id}\n                  candidate={candidate} />\n              ))}\n            </div>\n            <button\n              type=\"button\"\n              style={[\n                pageIndex === 0 && styles.activePage,\n              ]}\n              onClick={() => this.onClickPage(1)}>\n              1\n            </button>\n            <button\n              type=\"button\"\n              style={[\n                pageIndex === 1 && styles.activePage,\n              ]}\n              onClick={() => this.onClickPage(2)}>\n              2\n            </button>\n            <input\n              style={styles.button}\n              type=\"submit\"\n              value=\"送出\" />\n          </form>\n        </div>\n    );\n  }\n}\n\nconst formHook =reduxForm({\n  form: 'candidates_form',\n  initialValues: {\n    candidates: [],\n  },\n});\n\nconst reduxHook = connect(\n  state => ({\n    userName: state.Member.me.name,\n    me: state.Member.me,\n  }),\n  dispatch => bindActionCreators({\n    ...MemberActions,\n  }, dispatch),\n)\n\nexport default reduxHook(\n  formHook(\n    radium(\n      CandidatesPage\n    )\n  )\n);\n","// @flow\nimport React, { PureComponent } from 'react';\nimport radium from 'radium';\nimport FacebookLogin from 'react-facebook-login';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport * as MemberActions from '../../actions/member.js';\n\nconst styles = {\n  wrapper: {\n    backgroundColor: '#8f755e',\n    height: '100%',\n    minHeight: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    color: '#ffca31',\n  },\n  fbLoginBtn: {\n    color: '#ffffff',\n    fontSize: 15,\n    ':hover': {\n      color: 'rgb(222, 214, 103)',\n    },\n    display: 'none',\n  },\n};\n\nclass HomePage extends PureComponent {\n  // askManagePagesPermission() {\n  //   return fetch('graph.facebook.com/me/accounts HTTP/1.1', {\n  //     // body: JSON.stringify(data), // must match 'Content-Type' header\n  //     cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n  //     credentials: 'same-origin', // include, same-origin, *omit\n  //     headers: {\n  //       'user-agent': 'Mozilla/4.0 MDN Example',\n  //       'content-type': 'application/json'\n  //     },\n  //     method: 'GET', // *GET, POST, PUT, DELETE, etc.\n  //     mode: 'cors', // no-cors, cors, *same-origin\n  //     redirect: 'follow', // manual, *follow, error\n  //     referrer: 'no-referrer', // *client, no-referrer\n  //   })\n  //   .then(response => console.log(response.data)) // 輸出成 json\n  // }\n\n  loginWithFacebook(res) {\n    const {\n      history,\n      storeLoginMemberData,\n    } = this.props;\n\n    if (res.email) {\n      alert('成功登入');\n\n      console.log(res);\n\n      // localStorage.setItem('accessToken', res.accessToken);\n      // localStorage.setItem('name', res.name);\n      // localStorage.setItem('email', res.email);\n      // localStorage.setItem('id', res.id);\n\n      storeLoginMemberData({\n        id: res.id,\n        name: res.name,\n        email: res.email,\n        accessToken: res.accessToken,\n      });\n\n      history.push('candidates');\n    }\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div style={styles.wrapper}>\n        <h1 style={styles.title}>登入投票指南</h1>\n        <FacebookLogin\n          appId=\"126909908010825\"\n          autoLoad={true}\n          fields=\"name,email,picture\"\n          callback={(res) => this.loginWithFacebook(res)} />\n      </div>\n    );\n  }\n}\n\nconst reduxHook = connect(\n  state => state,\n  dispatch => bindActionCreators({\n    ...MemberActions,\n  }, dispatch),\n);\n\nexport default reduxHook(\n  radium(\n    HomePage\n  )\n);\n","// @flow\n\nimport React, { PureComponent } from 'react';\nimport radium from 'radium';\nimport { connect } from 'react-redux';\nimport { member as mockMember } from '../../mocks/member.js';\n\nconst styles = {\n  wrapper: {\n    padding: 64,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n  },\n  candidates: {\n    margin: '16px 0',\n  },\n  candidate: {\n    margin: '0 0 8px',\n  },\n}\n\nconst API_HOST = 'https://julia30040.github.io';\n\nclass CandidatesPage extends PureComponent<Props, State> {\n  render() {\n    const {\n      selectedCandidates,\n      me,\n    } = this.props;\n    const shareDataHref = `${API_HOST}/facebook_login/1/selectedCandidates`;\n\n    return (\n        <div style={styles.wrapper}>\n          <h2>{me.name || mockMember.name} 支持的候選人</h2>\n          <div style={styles.candidates}>\n            {(selectedCandidates.length ? selectedCandidates : mockMember.selectedCandidates).map(candidate => (\n              <div key={candidate.id} style={styles.candidate}>- {candidate.name}/ {candidate.politicalParty}</div>\n            ))}\n          </div>\n          <div className=\"fb-share-button\" data-href={shareDataHref} data-layout=\"button\" data-size=\"large\" data-mobile-iframe=\"true\"><a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fjulia30040.github.io%2Ffacebook_login%2F&amp;src=sdkpreparse\" className=\"fb-xfbml-parse-ignore\">分享</a></div>\n        </div>\n    );\n  }\n}\n\nconst reduxHook = connect(\n  state => ({\n    selectedCandidates: state.Member.selectedCandidates,\n    me: state.Member.me,\n  }),\n);\n\nexport default reduxHook(\n  radium(\n    CandidatesPage\n  )\n);\n","// @flow\nimport React, { Component, Fragment } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport CandidatesPage from './Candidates/CandidatesPage.jsx';\nimport HomePage from './Home/HomePage.jsx';\nimport SelectedCandidatesPage from './Member/SelectedCandidatesPage.jsx';\n\nclass MainBoard extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Switch>\n          <Route exact path=\"/candidates\" component={CandidatesPage} />\n          <Route exact path=\"/:memberId/selectedCandidates\" component={SelectedCandidatesPage} />\n          <Route path=\"/\" component={HomePage} />\n        </Switch>\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(MainBoard);\n","import React, { Component } from 'react';\nimport debug from 'debug';\nimport radium, { StyleRoot } from 'radium';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from 'react-redux'\nimport MainBoard from './container/MainBoard.jsx';\nimport store from './reducers/index.js';\n\nif (process.env.NODE_ENV !== 'production') {\n  debug.enable('Portfolio:*');\n}\n\nconst styles = {\n  fullHeight: {\n    height: '100%',\n  },\n  wrapper: {\n    overflow: 'hidden',\n  },\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <StyleRoot style={styles.fullHeight}>\n          <Router>\n            <div style={[\n                styles.wrapper,\n                styles.fullHeight,\n              ]}>\n              <MainBoard />\n            </div>\n          </Router>\n        </StyleRoot>\n      </Provider>\n    );\n  }\n}\n\nexport default radium(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}